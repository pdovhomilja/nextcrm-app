// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model crm_Accounts {
  id                   String               @id @default(uuid())  
  createdAt            DateTime             @default(now()) 
  createdBy            String?              
  updatedAt            DateTime?            @updatedAt 
  updatedBy            String?              
  annual_revenue       String?
  assigned_to          String?              
  billing_city         String?
  billing_country      String?
  billing_postal_code  String?
  billing_state        String?
  billing_street       String?
  company_id           String?
  description          String?
  email                String?
  employees            String?
  fax                  String?
  industry             String?              
  member_of            String?
  name                 String
  office_phone         String?
  shipping_city        String?
  shipping_country     String?
  shipping_postal_code String?
  shipping_state       String?
  shipping_street      String?
  status               String?              @default("Inactive")
  type                 String?              @default("Customer")
  vat                  String?
  website              String?
  invoices             Invoices[]
  contacts             crm_Contacts[]
  leads                crm_Leads[]
  industry_type        crm_Industry_Type?   @relation(fields: [industry], references: [id])
  opportunities        crm_Opportunities[]
  assigned_to_user     Users?               @relation(fields: [assigned_to], references: [id])
  crm_accounts_tasks   crm_Accounts_Tasks[]
  contracts            crm_Contracts[]
  watchers             String[]             
  watching_users  UsersOnAccounts[]
  documents            AccountsOnDocuments[]
}

model crm_Leads {
  id String @id @default(uuid())  
  createdAt          DateTime?     @default(now()) 
  createdBy          String?       
  updatedAt          DateTime?     @updatedAt 
  updatedBy          String?       
  firstName          String?
  lastName           String
  company            String?
  jobTitle           String?
  email              String?
  phone              String?
  description        String?
  lead_source        String?
  refered_by         String?
  campaign           String?
  status             String?       @default("NEW")
  type               String?       @default("DEMO")
  assigned_to        String?       
  assigned_to_user   Users?        @relation(fields: [assigned_to], references: [id])
  accountsIDs        String?       
  assigned_accounts  crm_Accounts? @relation(fields: [accountsIDs], references: [id])
  documents          LeadsOnDocuments[]
}

enum crm_Lead_Status {
  NEW
  CONTACTED
  QUALIFIED
  LOST
}

enum crm_Lead_Type {
  DEMO
}

model crm_Opportunities {
  id                   String                    @id @default(uuid())  
  account              String?                         
  assigned_to          String?                         
  budget               Int                             @default(0)
  campaign             String?                         
  close_date           DateTime?                       
  contact              String?                         
  created_by           String?                         
  createdBy            String?                         
  created_on           DateTime?                       @default(now()) 
  createdAt            DateTime                        @default(now())
  last_activity        DateTime?                       
  updatedAt            DateTime?                       @updatedAt 
  updatedBy            String?                         
  last_activity_by     String?                         
  currency             String?
  description          String?
  expected_revenue     Int                             @default(0)
  name                 String?
  status              crm_Opportunity_Status     @default(ACTIVE)
  created_by_user_relation Users?                @relation(name: "created_by_user_relation", fields: [created_by], references: [id])
  assigned_to_user_relation Users?               @relation(name: "assigned_to_user_relation", fields: [assigned_to], references: [id])
  
  // Relations
  contacts_relation    ContactsOnOpportunities[]
  documents_relation   OpportunitiesOnDocuments[]
  assigned_account     crm_Accounts?             @relation(fields: [accountId], references: [id])
  accountId           String?
  assigned_sales_stage crm_Opportunities_Sales_Stages? @relation(fields: [sales_stage_id], references: [id])
  sales_stage_id      String?
  assigned_type       crm_Opportunities_Type?    @relation(fields: [type_id], references: [id])
  type_id            String?

  campaign_relation    crm_campaigns?            @relation(fields: [campaign], references: [id])

  @@index([accountId])
  @@index([sales_stage_id])
  @@index([type_id])
  @@index([created_by])
  @@index([assigned_to])
}

enum crm_Opportunity_Status {
  ACTIVE
  INACTIVE
  PENDING
  CLOSED
}

model crm_campaigns {
  id                   String              @id @default(uuid())
  name                 String
  description         String?
  status              String?
  opportunities       crm_Opportunities[]
}

model crm_Opportunities_Sales_Stages {
  id                   String              @id @default(uuid())
  name                 String
  probability          Int?
  order               Int?
  opportunities       crm_Opportunities[]
}

model crm_Opportunities_Type {
  id                   String              @id @default(uuid())
  name                 String
  order               Int?
  opportunities       crm_Opportunities[]
}

model crm_Contacts {
  id                     String                    @id @default(uuid())
  account                String?                   
  assigned_to            String?                   
  birthday               String?
  created_by             String?                   
  createdBy              String?                   
  created_on             DateTime?                 @default(now()) 
  cratedAt               DateTime?                 @default(now()) 
  last_activity          DateTime?                 @default(now()) 
  updatedAt              DateTime?                 @updatedAt 
  updatedBy              String?                   
  last_activity_by       String?                   
  description            String?
  email                  String?
  personal_email         String?
  first_name             String?
  last_name              String
  office_phone           String?
  mobile_phone           String?
  website                String?
  position               String?
  status                 Boolean                   @default(true)
  social_twitter         String?
  social_facebook        String?
  social_linkedin        String?
  social_skype           String?
  social_instagram       String?
  social_youtube         String?
  social_tiktok          String?
  type                   String?                   @default("Customer")
  tags                   String[]
  notes                  String[]
  assigned_to_user       Users?                    @relation(name: "assigned_contacts", fields: [assigned_to], references: [id])
  create_by_user          Users?                    @relation(name: "created_contacts", fields: [created_by], references: [id])
  opportunities        ContactsOnOpportunities[]
  documents           ContactsOnDocuments[]
  assigned_accounts   crm_Accounts?             @relation(fields: [accountId], references: [id])
  accountId           String?
}

enum crm_Contact_Type {
  Customer
  Partner
  Vendor
  Prospect
}

model crm_Contracts {
  id                  String               @id @default(uuid())  
  title               String
  value               Int
  startDate           DateTime?            @default(now()) 
  endDate             DateTime?            
  renewalReminderDate DateTime?            
  customerSignedDate  DateTime?            
  companySignedDate   DateTime?            
  description         String?
  account             String?              
  assigned_to         String?              
  createdAt           DateTime?            @default(now()) 
  createdBy           String?              
  updatedAt           DateTime?            @updatedAt 
  updatedBy           String?              
  status              crm_Contracts_Status @default(NOTSTARTED)
  type                String?
  assigned_account    crm_Accounts?        @relation(fields: [account], references: [id])
  assigned_to_user    Users?               @relation(fields: [assigned_to], references: [id])
}

enum crm_Contracts_Status {
  NOTSTARTED
  INPROGRESS
  SIGNED
}

model Boards {
  id                String    @id @default(uuid())  
  description       String
  favourite         Boolean?
  favouritePosition Int?
  icon              String?
  position          Int?
  title             String
  user              String    
  visibility        String?
  sharedWith        String[]  
  createdAt         DateTime? @default(now()) 
  createdBy         String?   
  updatedAt         DateTime? @updatedAt 
  updatedBy         String?   
  assigned_user     Users?    @relation("assigned_user", fields: [user], references: [id])
  watchers_relation    UsersOnBoards[]
}

model Employees {
  id     String  @id @default(uuid())  
  avatar String
  email  String?
  name   String
  salary Int
  status String
}

model ImageUpload {
  id String @id @default(uuid())  
}

model MyAccount {
  id                   String  @id @default(uuid())  
  company_name         String
  is_person            Boolean @default(false)
  email                String?
  email_accountant     String?
  phone_prefix         String?
  phone                String?
  mobile_prefix        String?
  mobile               String?
  fax_prefix           String?
  fax                  String?
  website              String?
  // office Address
  street               String?
  city                 String?
  state                String?
  zip                  String?
  country              String?
  country_code         String?
  // billing Address
  billing_street       String?
  billing_city         String?
  billing_state        String?
  billing_zip          String?
  billing_country      String?
  billing_country_code String?
  //other
  currency             String?
  currency_symbol      String?
  VAT_number           String
  TAX_number           String?
  bank_name            String?
  bank_account         String?
  bank_code            String?
  bank_IBAN            String?
  bank_SWIFT           String?
}

model Invoices {
  id                            String          @id @default(uuid())  
  date_created                  DateTime        @default(now()) 
  last_updated                  DateTime        @updatedAt
  last_updated_by               String?         
  date_received                 DateTime?       @default(now()) 
  date_of_case                  DateTime?       
  date_tax                      DateTime?       
  date_due                      DateTime?       
  description                   String?
  document_type                 String?
  favorite                      Boolean?        @default(false)
  variable_symbol               String?
  constant_symbol               String?
  specific_symbol               String?
  order_number                  String?
  internal_number               String?
  invoice_number                String?
  invoice_amount                String?
  invoice_file_mimeType         String
  invoice_file_url              String
  invoice_items                 Json?
  invoice_type                  String?
  invoice_currency              String?
  invoice_language              String?
  partner                       String?
  partner_street                String?
  partner_city                  String?
  partner_zip                   String?
  partner_country               String?
  partner_country_code          String?
  partner_business_street       String?
  partner_business_city         String?
  partner_business_zip          String?
  partner_business_country      String?
  partner_business_country_code String?
  partner_VAT_number            String?
  partner_TAX_number            String?
  partner_TAX_local_number      String?
  partner_phone_prefix          String?
  partner_phone_number          String?
  partner_fax_prefix            String?
  partner_fax_number            String?
  partner_email                 String?
  partner_website               String?
  partner_is_person             Boolean?
  partner_bank                  String?
  partner_account_number        String?
  partner_account_bank_number   String?
  partner_IBAN                  String?
  partner_SWIFT                 String?
  partner_BIC                   String?
  rossum_status                 String?
  rossum_annotation_id          String?
  rossum_annotation_url         String?
  rossum_document_id            String?
  rossum_document_url           String?
  rossum_annotation_json_url    String?
  rossum_annotation_xml_url     String?
  money_s3_url                  String?
  status                        String?
  invoice_state_id              String?         
  assigned_user_id              String?         
  assigned_account_id           String?         
  visibility                    Boolean         @default(true)
  invoice_states                invoice_States? @relation(fields: [invoice_state_id], references: [id])
  users                         Users?          @relation(fields: [assigned_user_id], references: [id])
  accounts                      crm_Accounts?   @relation(fields: [assigned_account_id], references: [id])
  documents_relation              InvoicesOnDocuments[]
}

model invoice_States {
  id                String     @id @default(uuid())  
  name              String
  assigned_invoices Invoices[]
}

model Documents {
  id                     String                    @id @default(uuid())
  date_created           DateTime?                 @default(now()) 
  createdAt              DateTime?                 @default(now()) 
  last_updated           DateTime?                 @updatedAt
  updatedAt              DateTime?                 @updatedAt 
  document_name          String
  created_by_user        String?      
  assigned_to_user       String?
  createdBy              String?                     
  description            String?
  document_type          String?                     
  favourite              Boolean?
  document_file_mimeType String
  document_file_url      String
  status                 String?
  visibility             String?
  tags                   Json?
  key                    String?
  size                   Int?
  assigned_user          String?                     
  invoices              InvoicesOnDocuments[]
  tasks                 TasksOnDocuments[]
  leads                 LeadsOnDocuments[]
  documents_type         Documents_Types?                  @relation(fields: [document_type], references: [id])
  document_system_type   DocumentSystemType?               @default(OTHER)
  contacts            ContactsOnDocuments[]
  opportunities       OpportunitiesOnDocuments[]
  accounts            AccountsOnDocuments[]
  created_by_user_relation Users?                  @relation(name: "created_by_user", fields: [created_by_user], references: [id])
  assigned_to_user_relation Users?                 @relation(name: "assigned_to_user", fields: [assigned_user], references: [id])
  crm_account_tasks     crm_Accounts_Tasks[]    @relation("DocumentsToCrmAccountTasks")
}

enum DocumentSystemType {
  INVOICE
  RECEIPT
  CONTRACT
  OFFER
  OTHER
}

model Documents_Types {
  id                 String      @id @default(uuid())  
  name               String
  assigned_documents Documents[]
}

model Sections {
  id       String  @id @default(uuid())  
  board    String  
  title    String
  position Int?
  tasks    Tasks[]
}

model crm_Industry_Type {
  id       String         @id @default(uuid())  
  name     String
  accounts crm_Accounts[]
}

model modulStatus {
  id        String  @id @default(uuid())  
  name      String
  isVisible Boolean
}

model Tasks {
  id               String          @id @default(uuid())  
  content          String?
  createdAt        DateTime?       @default(now()) 
  createdBy        String?         
  updatedAt        DateTime?       @updatedAt 
  updatedBy        String?         
  dueDateAt        DateTime?       @default(now()) 
  lastEditedAt     DateTime?       @default(now()) @updatedAt 
  position         Int
  priority         String
  section          String?         
  tags             Json?
  title            String
  likes            Int?            @default(0)
  user             String?         
  comments         tasksComments[]
  documents        TasksOnDocuments[]
  assigned_user    Users?          @relation(fields: [user], references: [id])
  assigned_section Sections?       @relation(fields: [section], references: [id])
  //Staus
  taskStatus       taskStatus?     @default(ACTIVE)
}

model crm_Accounts_Tasks {
  id            String          @id @default(uuid())  
  content       String?
  createdAt     DateTime?       @default(now()) 
  createdBy     String?         
  updatedAt     DateTime?       @updatedAt 
  updatedBy     String?         
  dueDateAt     DateTime?       @default(now()) 
  priority      String
  tags          Json?
  title         String
  likes         Int?            @default(0)
  user          String?         
  documents     Documents[]     @relation("DocumentsToCrmAccountTasks")
  comments      tasksComments[]
  assigned_user Users?          @relation(fields: [user], references: [id])
  //CRM assigments
  account       String?         
  crm_accounts  crm_Accounts?   @relation(fields: [account], references: [id])
  //Status
  taskStatus    taskStatus?     @default(ACTIVE)
}

model tasksComments {
  id                             String              @id @default(uuid())  
  comment                        String
  createdAt                      DateTime            @default(now()) 
  task                           String              
  user                           String              
  assigned_crm_account_task      String?             
  assigned_crm_account_task_task crm_Accounts_Tasks? @relation(fields: [assigned_crm_account_task], references: [id])
  assigned_task                  Tasks?              @relation(fields: [task], references: [id], onDelete: Cascade)
  assigned_user                  Users?              @relation(fields: [user], references: [id])
}

enum taskStatus {
  ACTIVE
  PENDING
  COMPLETE
}

model TodoList {
  id          String @id @default(uuid())  
  createdAt   String
  description String
  title       String
  url         String
  user        String
}

enum ActiveStatus {
  ACTIVE
  INACTIVE
  PENDING
}

model Users {
  id                   String                @id @default(uuid())  
  account_name         String?
  avatar               String?
  email                String                @unique
  is_account_admin     Boolean               @default(false)
  is_admin             Boolean               @default(false)
  created_on           DateTime              @default(now()) 
  lastLoginAt          DateTime?             
  name                 String?
  password             String?
  username             String?
  userStatus           ActiveStatus          @default(PENDING)
  userLanguage         Language              @default(en)
  tasksComment         tasksComments[]
  created_by_documents Documents[]           @relation(name: "created_by_user")
  assigned_documents   Documents[]           @relation(name: "assigned_to_user")
  tasks                Tasks[]
  crm_accounts_tasks   crm_Accounts_Tasks[]
  accounts             crm_Accounts[]
  leads                crm_Leads[]
  created_by_user      crm_Opportunities[]   @relation(name: "created_by_user_relation")
  assigned_opportunity crm_Opportunities[]   @relation(name: "assigned_to_user_relation")
  assigned_contacts    crm_Contacts[]        @relation(name: "assigned_contacts")
  crated_contacts      crm_Contacts[]        @relation(name: "created_contacts")
  notion_account       secondBrain_notions[]
  openAi_key           openAi_keys[]
  assigned_invoices    Invoices[]
  assigned_contracts   crm_Contracts[]
  boards               Boards[]              @relation(name: "assigned_user")
  watching_boards_relation UsersOnBoards[]
  watching_accounts    UsersOnAccounts[]
}

enum Language {
  cz
  en
  de
  uk
}

model system_Modules_Enabled {
  id       String  @id @default(uuid())  
  name     String
  enabled  Boolean
  position Int
}

model secondBrain_notions {
  id             String @id @default(uuid())  
  user           String 
  notion_api_key String
  notion_db_id   String
  assigned_user  Users? @relation(fields: [user], references: [id])
}

model openAi_keys {
  id              String @id @default(uuid())  
  user            String 
  organization_id String
  api_key         String
  assigned_user   Users? @relation(fields: [user], references: [id])
}

model systemServices {
  id              String  @id @default(uuid())  
  name            String
  serviceUrl      String?
  serviceId       String?
  serviceKey      String?
  servicePassword String?
  servicePort     String?
  description     String?
}

model gpt_models {
  id          String     @id @default(uuid())  
  model       String
  description String?
  status      gptStatus?
  created_on  DateTime?  @default(now()) 
}

enum gptStatus {
  ACTIVE
  INACTIVE
}

// Join Tables for CRM Many-to-Many Relations
model ContactsOnOpportunities {
  id            String            @id @default(uuid())
  contactId     String
  opportunityId String
  assignedAt    DateTime          @default(now())
  
  contact       crm_Contacts      @relation(fields: [contactId], references: [id])
  opportunity   crm_Opportunities @relation(fields: [opportunityId], references: [id])

  @@unique([contactId, opportunityId])
  @@index([contactId])
  @@index([opportunityId])
}

model ContactsOnDocuments {
  id         String      @id @default(uuid())
  contactId  String
  documentId String
  assignedAt DateTime    @default(now())
  
  contact    crm_Contacts @relation(fields: [contactId], references: [id])
  document   Documents    @relation(fields: [documentId], references: [id])

  @@unique([contactId, documentId])
  @@index([contactId])
  @@index([documentId])
}

model OpportunitiesOnDocuments {
  id            String            @id @default(uuid())
  opportunityId String
  documentId    String
  assignedAt    DateTime          @default(now())
  
  opportunity   crm_Opportunities @relation(fields: [opportunityId], references: [id])
  document      Documents         @relation(fields: [documentId], references: [id])

  @@unique([opportunityId, documentId])
  @@index([opportunityId])
  @@index([documentId])
}

model AccountsOnDocuments {
  id         String       @id @default(uuid())
  accountId  String
  documentId String
  assignedAt DateTime     @default(now())
  
  account    crm_Accounts @relation(fields: [accountId], references: [id], onDelete: Cascade)
  document   Documents    @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@unique([accountId, documentId])
  @@index([accountId])
  @@index([documentId])
}

model UsersOnAccounts {
  id        String       @id @default(uuid())
  userId    String
  accountId String
  assignedAt DateTime    @default(now())
  
  user      Users        @relation(fields: [userId], references: [id], onDelete: Cascade)
  account   crm_Accounts @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@unique([userId, accountId])
  @@index([userId])
  @@index([accountId])
}

model InvoicesOnDocuments {
  id         String   @id @default(uuid())
  invoiceId  String
  documentId String
  assignedAt DateTime @default(now())
  
  invoice    Invoices  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  document   Documents @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@unique([invoiceId, documentId])
  @@index([invoiceId])
  @@index([documentId])
}

model TasksOnDocuments {
  id         String   @id @default(uuid())
  taskId     String
  documentId String
  assignedAt DateTime @default(now())
  
  task       Tasks     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  document   Documents @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@unique([taskId, documentId])
  @@index([taskId])
  @@index([documentId])
}

model LeadsOnDocuments {
  id         String   @id @default(uuid())
  leadId     String
  documentId String
  assignedAt DateTime @default(now())
  
  document   Documents @relation(fields: [documentId], references: [id], onDelete: Cascade)
  lead       crm_Leads @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@unique([leadId, documentId])
  @@index([leadId])
  @@index([documentId])
}

model UsersOnBoards {
  id        String   @id @default(uuid())
  userId    String
  boardId   String
  assignedAt DateTime @default(now())
  
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  board     Boards   @relation(fields: [boardId], references: [id], onDelete: Cascade)

  @@unique([userId, boardId])
  @@index([userId])
  @@index([boardId])
}
